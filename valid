<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title style="text-align: center; color: rgb(255, 187, 0); font-family: 'Google Sans', sans-serif;">IMAGE URL CHECKER</title>
    <style>
        body {
            background-color: rgb(0, 1, 18);
            color: rgb(251, 246, 246);
            font-family: 'Google Sans', sans-serif;
            text-align: center;
        }
        table {
            width: 100%;
            border-collapse: collapse;
            margin-top: 20px;
        }
        th, td {
            border: 2px solid #f6f4f4;
            padding: 8px;
            font-weight: bold;
        }
        th {
            background-color: rgb(10, 10, 10);
            color: rgb(253, 250, 250);
            font-size: 120%;
        }
        .invalid {
            background-color: #ff081d;
        }
        button {
            background-image: url(https://thumbs.dreamstime.com/b/shiny-silver-gray-foil-texture-background-146648750.jpg);
            font-size: large;
            color: rgb(3, 3, 3);
            font-weight: bold;
            padding: 10px 30px;
            margin: 5px;
            border: 3px solid #070707;
            cursor: pointer;
            font-size: 150%;
        }
        h1 {
            color: rgb(241, 159, 7);
            font-weight: bold;
            font-size: 400%;
        }
        #status {
            margin-top: 20px;
            font-size: 120%;
            font-weight: bold;
            color: #ff081d;
            font-family: 'Lucida Sans', 'Lucida Sans Regular', 'Lucida Grande', 'Lucida Sans Unicode', Geneva, Verdana, sans-serif;
        }
    </style>
</head>
<body>
    <h1>IMAGE URL CHECKER</h1>
    <button onclick="pasteData()">PASTE</button>
    <button onclick="validateUrls()">VALIDATE</button>
    <button onclick="copyData()">COPY</button>
    <div id="status"></div>
    <table id="dataTable">
        <thead>
            <tr>
                <th>SellerSKU</th>
                <th>Parent SKU</th>
                <th>Source</th>
                <th>Image 1</th>
                <th>Image 2</th>
                <th>Image 3</th>
                <th>Image 4</th>
                <th>Image 5</th>
                <th>Image 6</th>
                <th>Image 7</th>
                <th>Image 8</th>
            </tr>
        </thead>
        <tbody>
        </tbody>
    </table>

    <script>
        function pasteData() {
            navigator.clipboard.readText().then(text => {
                const rows = text.trim().split('\n');
                const table = document.getElementById('dataTable').getElementsByTagName('tbody')[0];
                table.innerHTML = ''; // Clear existing rows
                rows.forEach(row => {
                    const cells = row.split('\t');
                    const newRow = table.insertRow();
                    cells.forEach(cell => {
                        const newCell = newRow.insertCell();
                        newCell.textContent = cell;
                    });
                });
            }).catch(err => {
                alert('Failed to read clipboard contents: ' + err);
            });
        }

        async function isValidImageURL(url) {
            return new Promise((resolve, reject) => {
                var img = new Image();
                img.onload = function() {
                    resolve(true);
                };
                img.onerror = function() {
                    resolve(false);
                };
                img.src = url;
            });
        }

        async function validateUrls() {
            document.getElementById('status').textContent = 'VALIDATING...';
            const table = document.getElementById('dataTable');
            const rows = table.getElementsByTagName('tbody')[0].getElementsByTagName('tr');

            for (let row of rows) {
                for (let i = 3; i < row.cells.length; i++) { // Assuming URL columns start from the 5th column
                    const url = row.cells[i].textContent;
                    const isValid = await isValidImageURL(url);
                    if (!isValid) {
                        row.cells[i].classList.add('invalid');
                    } else {
                        row.cells[i].classList.remove('invalid');
                    }
                }
            }
            document.getElementById('status').textContent = 'VALIDATION COMPLETE!!!';
        }

        function copyData() {
            const table = document.getElementById('dataTable');
            const rows = table.getElementsByTagName('tbody')[0].getElementsByTagName('tr');
            let text = '';

            for (let row of rows) {
                const cells = Array.from(row.cells).map(cell => cell.classList.contains('invalid') ? '' : cell.textContent);
                text += cells.join('\t') + '\n';
            }

            navigator.clipboard.writeText(text).then(() => {
                alert('Data copied to clipboard');
            }).catch(err => {
                alert('Failed to copy data: ' + err);
            });
        }
    </script>
</body>
</html>

