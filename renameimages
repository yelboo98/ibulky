<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>BULK RENAME IMAGES</title>

    <link rel="icon" href="https://etaily-files.s3.amazonaws.com/test_folder/britool.png" type="image/x-icon">

    <script src="https://cdnjs.cloudflare.com/ajax/libs/jszip/3.10.1/jszip.min.js"></script>
    <script src="https://cdnjs.cloudflare.com/ajax/libs/xlsx/0.18.5/xlsx.full.min.js"></script>
    <style>
        body {
            margin: 0;
            padding: 0;
            font-family: Arial, sans-serif;
            background: linear-gradient(to bottom, #0f2027, #203a43, #2c5364);
            color: #fff;
            text-align: center;
        }

        h1 {
            margin: 20px 0;
            font-size: 3.5rem;
            color: #ffd700;
        }

        p {
            font-size: 1.2rem;
        }

        .container {
            max-width: 800px;
            margin: 0 auto;
            padding: 20px;
        }

        .card {
            background: rgba(255, 255, 255, 0.1);
            border-radius: 10px;
            padding: 20px;
            box-shadow: 0 4px 8px rgba(0, 0, 0, 0.2);
            margin: 20px 0;
        }

        .form-group {
            display: flex;
            flex-direction: column;
            align-items: flex-start;
            gap: 10px;
            margin-bottom: 20px;
        }

        .form-group label {
            font-size: 1rem;
            font-weight: bold;
            color: #ffd700;
        }

        .form-group input[type="file"] {
            width: 50%;
            padding: 10px;
            border: none;
            border-radius: 5px;
            background: #d5d5d5;
            color: #333;
        }

        button {
            background-color: #4caf50;
            color: white;
            padding: 10px 20px;
            border: none;
            border-radius: 5px;
            font-size: 1rem;
            cursor: pointer;
            box-shadow: 0 4px 6px rgba(0, 0, 0, 0.2);
            transition: background 0.3s ease;
        }

        button:hover {
            background-color: #45a049;
        }

        #progressBar {
            width: 100%;
            background-color: rgba(255, 255, 255, 0.2);
            border-radius: 5px;
            margin: 10px 0;
            display: none;
        }

        #progressBar div {
            height: 20px;
            width: 0;
            background-color: #ffd700;
            text-align: center;
            line-height: 20px;
            color: black;
            border-radius: 5px;
        }

        #statusMessage {
            margin-top: 20px;
            font-weight: bold;
            color: #f73105;
        }

        .guidelines-container {
            background: rgba(255, 255, 255, 0.1);
            padding: 50px;
            border-radius: 10px;
            text-align: center;
            max-width: 1000px;
            margin: 40px auto;
            box-shadow: 0 4px 8px rgba(0, 0, 0, 0.3);
            color: #fff;
        }

        .guidelines-container h2 {
            color: #ffd700;
            text-align: center;
            font-size: 2.5rem;
            font-weight: bold;
            text-transform: uppercase;
        }

        .guidelines-container img {
            max-width: 100%;
            border-radius: 10px;
            border: 2px solid #ffd700;
            box-shadow: 0 4px 6px rgba(0, 0, 0, 0.3);
        }

        .guidelines-container p {
            font-size: 1rem;
            text-align: justify;
            line-height: 1.6;
            color: #d3d3d3;
        }
    </style>
</head>
<body>
    <div class="container">
        <h1>BULK RENAME IMAGES</h1>
        <p>Upload a ZIP file of images and an Excel file with renaming rules</p>

        <div class="card">
            <div class="form-group">
                <label for="zipFile">Upload ZIP File:</label>
                <input type="file" id="zipFile" accept=".zip">
            </div>

            <div class="form-group">
                <label for="excelFile">Upload Excel File:</label>
                <input type="file" id="excelFile" accept=".xlsx, .xls">
            </div>

            <button id="processButton">Process and Download</button>

            <div id="progressBar">
                <div></div>
            </div>

            <div id="statusMessage"></div>
        </div>
    </div>

    <script>
        document.getElementById('processButton').addEventListener('click', async () => {
            const zipFileInput = document.getElementById('zipFile');
            const excelFileInput = document.getElementById('excelFile');
            const progressBar = document.getElementById('progressBar');
            const progressBarFill = progressBar.querySelector('div');
            const statusMessage = document.getElementById('statusMessage');
            const processButton = document.getElementById('processButton');

            if (!zipFileInput.files.length || !excelFileInput.files.length) {
                alert('Please upload both a ZIP file and an Excel file.');
                return;
            }

            processButton.disabled = true;
            progressBar.style.display = 'block';
            progressBarFill.style.width = '0';
            statusMessage.textContent = 'Processing...';

            try {
                const zipFile = zipFileInput.files[0];
                const excelFile = excelFileInput.files[0];

                // Read Excel file
                const excelData = await excelFile.arrayBuffer();
                const workbook = XLSX.read(excelData, { type: 'array' });
                const sheetName = workbook.SheetNames[0];
                const sheet = workbook.Sheets[sheetName];
                const mappings = XLSX.utils.sheet_to_json(sheet, { header: 1 });

                // Convert mappings to an object
                const renameMap = {};
                mappings.forEach(([original, renamed]) => {
                    if (original && renamed) renameMap[original] = renamed;
                });

                // Process ZIP file
                const zip = new JSZip();
                const loadedZip = await zip.loadAsync(zipFile);
                const renamedZip = new JSZip();

                const files = Object.keys(loadedZip.files);
                for (let i = 0; i < files.length; i++) {
                    const filename = files[i];
                    if (!loadedZip.files[filename].dir) {
                        const fileData = await loadedZip.files[filename].async('blob');
                        const newFilename = renameMap[filename] || filename;
                        renamedZip.file(newFilename, fileData);

                        // Update progress bar
                        progressBarFill.style.width = `${((i + 1) / files.length) * 100}%`;
                    }
                }

                // Generate and download ZIP file
                const renamedZipBlob = await renamedZip.generateAsync({ type: 'blob' });
                const downloadLink = document.createElement('a');
                downloadLink.href = URL.createObjectURL(renamedZipBlob);
                downloadLink.download = 'renamed_images.zip';
                downloadLink.click();

                statusMessage.textContent = 'Complete: File has been successfully downloaded.';
            } catch (error) {
                statusMessage.textContent = 'Error: ' + error.message;
            } finally {
                processButton.disabled = false;
            }
        });
    </script>

    <div class="guidelines-container">
        <h2>WORKING GUIDELINES</h2>
        <a href="" target="_blank">
            <img src="https://etaily-files.s3.amazonaws.com/test_folder/Bulk%20Image%20Rename.png" alt="Batch Image Uploader">
        </a>
        <p>This tool allows you to quickly rename a bulk set of images based on a mapping provided in an Excel file. Simply upload a ZIP file containing the images along with an Excel file that contains the original filenames and their corresponding new names. The tool will process the files, rename them accordingly, and generate a new ZIP file for download with the renamed images. This process will save you time and effort by automating the image renaming task, allowing you to focus on other aspects of your workflow.</p>
    </div>
</body>
</html>
